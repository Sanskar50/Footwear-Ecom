{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL-PC\\\\OneDrive\\\\Documents\\\\WEBD-FS\\\\ToDo-Mern-App\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [task, setTask] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  // Define the fetchTodos function\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch todos from the server when the component mounts\n    fetchTodos();\n  }, []); // Add an empty dependency array\n\n  const handleAddTodo = async () => {\n    console.log('Adding todo...');\n    try {\n      // Make a POST request to create a new todo\n      await axios.post('http://localhost:5000/api/todos', {\n        task\n      });\n      // Fetch updated todos after adding a new one\n      fetchTodos();\n      // Clear the input field\n      setTask('');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n  const handleUpdateTodo = async id => {\n    try {\n      // Make a PUT request to update the completion status of a todo\n      await axios.put(`http://localhost:5000/api/todos/${id}`, {\n        completed: true\n      });\n      // Fetch updated todos after marking one as completed\n      fetchTodos();\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  const handleDeleteTodo = async id => {\n    try {\n      // Make a DELETE request to remove a todo\n      await axios.delete(`http://localhost:5000/api/todos/${id}`);\n      // Fetch updated todos after deleting one\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MERN Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task,\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTodo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.task, \" - \", todo.completed ? 'Completed' : 'Incomplete', !todo.completed && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdateTodo(todo._id),\n            children: \"Mark as Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTodo(todo._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OIlS0cj44Yo9VcrZ6MUC8lKJ4Sg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","task","setTask","todos","setTodos","fetchTodos","response","get","data","error","console","handleAddTodo","log","post","handleUpdateTodo","id","put","completed","handleDeleteTodo","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","todo","_id","_c","$RefreshReg$"],"sources":["C:/Users/DELL-PC/OneDrive/Documents/WEBD-FS/ToDo-Mern-App/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [task, setTask] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  // Define the fetchTodos function\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch todos from the server when the component mounts\n    fetchTodos();\n  }, []); // Add an empty dependency array\n\n  const handleAddTodo = async () => {\n    console.log('Adding todo...');\n    try {\n      // Make a POST request to create a new todo\n      await axios.post('http://localhost:5000/api/todos', { task });\n      // Fetch updated todos after adding a new one\n      fetchTodos();\n      // Clear the input field\n      setTask('');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n    }\n  };\n\n  const handleUpdateTodo = async (id) => {\n    try {\n      // Make a PUT request to update the completion status of a todo\n      await axios.put(`http://localhost:5000/api/todos/${id}`, { completed: true });\n      // Fetch updated todos after marking one as completed\n      fetchTodos();\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n\n  const handleDeleteTodo = async (id) => {\n    try {\n      // Make a DELETE request to remove a todo\n      await axios.delete(`http://localhost:5000/api/todos/${id}`);\n      // Fetch updated todos after deleting one\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>MERN Todo App</h1>\n      <div>\n        <input type=\"text\" value={task} onChange={(e) => setTask(e.target.value)} />\n        <button onClick={handleAddTodo}>Add Todo</button>\n      </div>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo._id}>\n            {todo.task} - {todo.completed ? 'Completed' : 'Incomplete'}\n            {!todo.completed && (\n              <>\n                <button onClick={() => handleUpdateTodo(todo._id)}>Mark as Completed</button>\n                <button onClick={() => handleDeleteTodo(todo._id)}>Delete</button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}